---
// https://github.com/surjithctly/astro-navbar
import {
  Astronav,
  MenuItems,
  MenuIcon,
  //   Dropdown,
  //   DropdownItems,
} from 'astro-navbar'
import HeaderLink from './HeaderLink.astro'
import { siteConfig } from '@/site-config'
import { Image } from 'astro:assets'
import dan from '../../public/img/dan.avif'
---

<div class="container mx-auto">
  <header class="gap-5 p-5 lg:flex">
    <Astronav>
      <div class="flex w-full justify-between lg:w-min">
        <a aria-label="Home" class="relative mr-2 h-8 w-8" href="/">
          <Image
            src={dan}
            alt="Dan Stroot Headshot"
            class="overflow-hidden rounded-full object-cover duration-300 ease-in-out hover:opacity-[85%]"
          />
        </a>
        <div class="block lg:hidden">
          <MenuIcon class="h-6 w-6 text-gray-800 dark:text-gray-100" />
        </div>
      </div>
      <MenuItems class="hidden w-full lg:flex">
        <ul class="flex flex-col lg:flex-row lg:gap-5">
          {
            siteConfig.mainNav.map((item) => (
              <li>
                <HeaderLink
                  class="block select-none space-y-1 rounded-full bg-accent px-5 py-2 leading-none no-underline outline-none transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground"
                  href={item.href}
                >
                  {item.name}
                </HeaderLink>
              </li>
            ))
          }
        </ul>
      </MenuItems>
      <MenuItems class="hidden lg:flex">
        <nav class="flex items-center space-x-2">
          <a
            aria-label="Search"
            class="relative inline-flex h-8 w-8 items-center justify-center rounded-md bg-transparent p-0 transition-colors hover:bg-accent hover:text-accent-foreground focus-visible:ring-1 focus-visible:ring-ring"
            href="/search"
            ><svg
              xmlns="http://www.w3.org/2000/svg"
              viewBox="0 0 24 24"
              fill="none"
              stroke="currentColor"
              stroke-width="2"
              stroke-linecap="round"
              stroke-linejoin="round"
              class="h-6 w-6"
              ><circle cx="11" cy="11" r="8"></circle><path d="m21 21-4.3-4.3"
              ></path></svg
            ></a
          ><button
            class="inline-flex h-8 w-8 items-center justify-center rounded-md p-0 text-sm font-medium ring-offset-background transition-colors hover:bg-accent hover:text-accent-foreground focus-visible:outline-none focus-visible:ring-0 focus-visible:ring-ring focus-visible:ring-offset-0 disabled:pointer-events-none disabled:opacity-50"
            type="button"
            id="radix-:r4:"
            aria-label="Toggle between Dark and Light mode"
            data-aw-toggle-color-scheme=""
            ><svg
              role="img"
              viewBox="0 0 24 24"
              fill="none"
              stroke="currentColor"
              stroke-width="2"
              stroke-linecap="round"
              stroke-linejoin="round"
              class="h-6 w-6"
              ><circle cx="12" cy="12" r="4"></circle><path d="M12 3v1"
              ></path><path d="M12 20v1"></path><path d="M3 12h1"></path><path
                d="M20 12h1"></path><path d="m18.364 5.636-.707.707"
              ></path><path d="m6.343 17.657-.707.707"></path><path
                d="m5.636 5.636.707.707"></path><path d="m17.657 17.657.707.707"
              ></path></svg
            ><span class="sr-only">Toggle theme</span></button
          >
        </nav>
      </MenuItems>
    </Astronav>
  </header>
</div>

<script>
  ;(function () {
    const e = 'system'

    function t(e: any) {
      'dark' === e
        ? document.documentElement.classList.add('dark')
        : document.documentElement.classList.remove('dark')
    }

    const d = function () {
      ;(e && e.endsWith(':only')) || (localStorage.theme, 0)
        ? t(e.replace(':only', ''))
        : 'dark' === localStorage.theme ||
            (!('theme' in localStorage) &&
              window.matchMedia('(prefers-color-scheme: dark)').matches)
          ? t('dark')
          : t('light')
    }

    function a(e: any, t: any, d: any) {
      const a = 'string' == typeof e ? document.querySelectorAll(e) : e
      a &&
        a.length &&
        a.forEach((e: any) => {
          e.addEventListener(t, (t: any) => d(t, e), !1)
        })
    }

    d()

    const o = function () {
      a('[data-aw-toggle-color-scheme]', 'click', function () {
        e.endsWith(':only') ||
          (document.documentElement.classList.toggle('dark'),
          (localStorage.theme = document.documentElement.classList.contains(
            'dark',
          )
            ? 'dark'
            : 'light'))
      }),
        o()
    }

    ;(window.onload = o),
      document.addEventListener('astro:after-swap', () => {
        d(), o()
      })
  })()
</script>
